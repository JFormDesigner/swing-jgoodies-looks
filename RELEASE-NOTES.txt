
                         JGoodies Looks
                          Version 2.0.1
                          Release Notes
                        

INTRODUCTION

    This maintenance release fixes a bug that affects those who
    want to use the visual backward compatible Looks1xWindowsFontPolicy
    on Windows 95/98/NT/ME. It also fixes two minor bugs that affect
    all platforms.

    
BUGS FIXED

    #107: IllegalArgumentException for degenerated popup with shadow.
    #118: Potentially wrong font for menu item accelerators.
    #120: NPE in visual backward compatiblity FontPolicy on Windows 98. 


OTHER CHANGES

    o Added toolbar tool tips and a keyboard action to the Looks Demo.
    
    
---------------------------------------------------------------------------

Find below the change history for older releases.



                         JGoodies Looks
                           Version 2.0
                          Release Notes
                        

INTRODUCTION

    This JGoodies Looks version 2.0 fixes bugs, comes with 
    many improvements and uses an overhauled font lookup.
    The contained Windows L&f and Plastic L&fs supercede 
    all previous version w.r.t. consistency, design precision, 
    and support for Java 5, Java 6 and Windows Vista.
    
    Version 2.0 is binary and visually incompatible with the
    Looks 1.x; however most API changes are simplifications and 
    the visual changes improve the consistency of your apps.
    
    The font lookup in the Windows L&f has been overhauled.
    Text component insets have been adjusted to better comply 
    with the "Microsoft Layout Specification and Guidelines".
    Also, Windows Vista is now supported: bounds, insets and 
    font baseline positions are consistent on the Vista betas.
    
    The Plastic L&f family component bounds and insets 
    have been adjusted to the new Windows bounds and insets.
    The Plastic font lookup has been completely overhauled; 
    it is great on Windows and works well on other platforms. 
    
    The new font customization mechanism allows you to change 
    the fonts per L&f, platform, locale and desktop settings.


CHANGES THAT AFFECT THE BINARY COMPATIBILITY

    The old font options (FontSizeHints, etc) have been replaced 
    by the new FontPolicy mechanism and predefined FontPolicies.

    o Replaced Options.CONTROL_FONT_KEY and MENU_FONT_KEY by:
      - PLASTIC_FONT_CHOICE_POLICY_KEY
      - PLASTIC_CONTROL_FONT_KEY    
      - PLASTIC_MENU_FONT_KEY    
      - WINDOWS_FONT_CHOICE_POLICY_KEY
      - WINDOWS_CONTROL_FONT_KEY    
      - WINDOWS_MENU_FONT_KEY    
    o Removed Options.EXT_WINDOWS_NAME
    o Removed Options.FONT_SIZE_HINTS_KEY
    o Removed Options#getGlobalFontSizeHints
    o Removed Options#setGlobalFontSizeHints
    o Removed PlasticLookAndFeel#getFontSizeHints
    o Removed PlasticLookAndFeel#setFontSizeHints
    o Removed WindowsLookAndFeel#getFontSizeHints
    o Removed WindowsLookAndFeel#setFontSizeHints
    o Removed FontSizeHints
    o Removed LookUtils#createButtonMargin(boolean)
    o Removed LookUtils#installNarrowMargin
    o Removed FontUtils
    o Options#initializeDefaultReplacements now private
    o Removed obsolete Plastic themes: SkyBluerTahoma, 
      ExperienceBlueDefaultFont, DesertBluerDefautFont
      
      
CHANGES THAT AFFECT THE VISUAL COMPATIBILITY

    Options#getUseNarrowButtons returns true by default.
    Although the narrow margins are the correct button margins,
    it leads to poor design if you don't ensure a reasonable
    minimum width for buttons with a short text, e.g. "OK".
    You can disable this feature using #setUseNarrowButtons(false),
    which was the behavior in the JGoodies Looks 1.x.
    
    Options.DEFAULT_LOOK_NAME is now PLASTICXP_NAME
    making PlasticXP the default L&f when chosen via
    the Options L&f names. PLASTICXP_NAME is also returned
    by Options#getCrossPlatformLookAndFeelClassName.
      
    On Windows 95/98/ME/NT/2000/2003/XP the JGoodies Windows L&f 
    follows the "Microsoft Layout Specifications and Guidelines" 
    even closer than the JGoodies Windows L&f version 1.3.
    Components that are arranged in a row have perceived bounds 
    of 14 dialog units (dlu). Since Windows XP command buttons
    (in the default styles) have two transparent lines in 
    the top and bottom, the concrete command button bounds
    are 2 pixels larger than for the textfield, combo, etc.
    If you lay out them in a row and center them vertically 
    the perceived (aka visual) bounds will be aligned.
       On Windows Vista the JGoodies Windows L&f dimensions
    and insets are based on the "Windows Vista UX Guidelines" 
    version 0.8. The JGoodies sizes differ slightly from
    the sizes recommended by these guidelines. For example
    the guidelines recommend to make a text field on 96dpi
    with normal fonts 20px tall, a combo 21px and buttons 22px
    (or 13dlu). The JGoodies Windows L&f uses consistent sizes, 
    insets and font baseline positions for all components
    that are arranged in a row - just as recommended in all 
    previous Windows editions, but based on 13dlu because 
    the new default font Segoe UI is significantly taller.
    
    The default font chosen on Windows now honors the desktop 
    font setting (Normal/Large/Extra Large) if supported 
    by the Windows version, Windows language, and Java renderer.
    Microsoft recommends to use the desktop setting "font size"
    to get larger fonts, many applications ignore it and 
    just scale with the software resolution (96dpi/120dpi).
       On 96dpi the new font doesn't differ from the 
    font chosen by the Looks 1.x; it's Tahoma 8pt on modern
    Windows, and Segoe UI 9pt on Vista. On 120dpi the new font 
    is 1px taller than the font used by the Looks 1.x. 
    
    The Plastic L&f family uses Windows fonts on Windows
    and logical fonts on all other platforms. In the Looks 1.x
    most Plastic themes used the Tahoma font on all platforms.
    If Tahoma was absent, the logical fonts were used.

      
VISUAL BACKWARD COMPATIBILITY

    We recommend to use the new default settings and it is 
    strongly recommended to use the new font lookup on Windows. 
    However, here's how you can get the appearance of 
    the Looks 1.x. The configurations listed below
    must be performed before you install a look&feel.
    
    To get the wrong wide button margins, call:
      Options.setNarrowMargins(false).
      
    To use the Looks 1.x fonts in the Windows L&f use:
      WindowsLookAndFeel.setFontPolicy(
          FontPolicies.getLooks1xWindowsPolicy());
          
    To use the Looks 1.x fonts in the Plastic L&fs use:
      PlasticLookAndFeel.setFontPolicy(
          FontPolicies.getLooks1xPlasticPolicy());
          
    To give Plastic the new fonts on Windows and the
    Looks 1.x fonts on other platforms use:
      PlasticLookAndFeel.setFontPolicy(
          FontPolicies.getTransitionalPlasticPolicy());
          
    You can customize the control font and menu font
    in the system properties for Windows and Plastic:
    java -jar -DWindows.controlFont="Tahoma-plain-11"
              -DWindows.menuFont="Tahoma-plain-12"
              -DPlastic.controlFont="Tahoma-plain-11"
              -DPlastic.menuFont="Verdana-bold-12"
        myapplication.jar
    If the menu font is not specified, the control font
    will be used for menus too.


BUGS FIXED

    #10:  Plastic looks can't display Chinese, Japanese, Korean.
    #50:  ToolBar 3D effect ignores the orientation.
    #51:  Windows combobox with custom render is too narrow.
    #60:  Wrong combobox height in Java 5 and Java 6.
    #67:  Wrong menu border in Windows XP L&f.
    #69:  Broken menu item anti-aliasing in Java 5 or later.
    #70:  Inconsistent bounds, insets and baselines on Windows Vista.
    #71:  Password echo character too small on Windows Vista.
    #73:  Windows L&f ignores the desktop control font size setting.
    #74:  Color theme lost on Applet refresh.
    #79:  Windows combobox too narrow.
    #80:  Plastic combo arrow button is focusable in Java 6.
    #81:  Wrong icon for "OptionPane.questionIcon" property.
    #83:  Windows tabbed pane has line under selected tab
          in Java 5 or later if the content border is disabled.
    #84:  Windows L&F combo margin too wide in table.
    #86:  Windows combobox too narrow if the renderer has zero insets.
    #89:  Plastic L&F editable combo margin too large in table.
    #90:  Spinner does not stop the timer when loosing focus.
    #91:  Progress invisible in Plastic Silver theme.
    #94:  Windows default title font shall be plain not bold.
    #95:  Display Windows toolbar drag handles.
    #96:  Fix Windows formatted text field background.
    #97:  Fix text area disabled/non-editable background.
    #98:  Fix Windows disabled non-editable combo background.
    #100: Fix WindowsXP title color on Java 1.4.2.
    #101: Windows combo text phantom UI doesn't change with L&f.   
    #102: Plastic menu doesn't restore opaque state.
    #103: Disabled menu items lack shadow in classic mode.
    #105: Menu items mnemonic display shall check for show/hide status.
    #108: JMenu on JPopupMenu not always drawn in selected state.
    #110: NPE with invalid default Plastic theme set via system props.
    #111: RTL menus have problems with accelerator alignment.
    #113: Combo popup with prototype ignores scrollbar visibility.
    #114: Accelerator text overlaps menu text if no-icons is set.
    #115: Need a fix for the Java bug 4530952.
    
    
KNOWN ISSUES

    Plastic 3D effect broken on Mac OS X Tiger with Java 1.4 and 5.
    Due to a bug in the Tiger Java2D implementation, the pseudo 3D
    up and down effects are not rendered. Instead a plain white
    is painted. See also issue #92.
    

NEW FEATURES
    
    #55: Add option to make combo popups wider than the combo.
         You can set a popup prototype display value that
         is used to determine with popup widths.
         
    o Narrow buttons can be disabled in the system properties.
    o Added a JPopupMenu client property for no-margin borders,
      see Options#NO_MARGIN_KEY. This is useful if a JPopupMenu 
      contains a single component, for example a JScrollPane.
    o Added a JTextArea client property for an info background.
      This hint is used for non-editable areas that shall use
      the editable background, not the inactive background.


DISTRIBUTION CHANGES

    o Merged the source folders 'src/common', 'src/plastic'
      and 'src/windows' to 'src/core'.
    o The sources no longer ship as a source Zip archive.
      They now come in the directory structure used by the CVS. 
      This makes it easier to build the distribution using ANT.     
      If you want to attach the library sources in an IDE, 
      point to folder 'src/core'.
    
    
OTHER CHANGES

    o The Windows and Plastic L&fs have been tweaked for Windows Vista.
    o Overhauled the Windows combobox layout and rendering.
    o Overhauled the Plastic combobox layout and rendering.
    o Improved appearance of the Looks Demo tabs on Windows.
    o The ANT build can now create a Maven bundle.
    o The demo's DemoFrame class accepts a parameter for the L&f: 
      "Windows", "Plastic", "Plastic3D", "PlasticXP",
      or a full class name like:
      "com.sun.java.swing.plaf.windows.WindowsLookAndFeel",
      "javax.swing.plaf.metal.MetalLookAndFeel".
    
    
---------------------------------------------------------------------------

Find below the change history for older releases.



                    JGoodies Looks, Version 1.3.2 
                            Release Notes
                        

INTRODUCTION

    This update fixes a couple of bugs, most noticably in the drop shadow 
    feature. Also the source code style has been slightly improved.


BUGS FIXED

    #43: ShadowPopupFactory doesn't respect the lightweight property.
    #45: NPE in ShadowPopup.hide().
    #47: JavaCup.gif reported missing in Windows L&f.
    #50: ToolBarUI doesn't take the orientation into account.
    #53: ClassCastException in ShadowPopup.
    #56: NPE in ShadowPopupFactory on OS X 10.4.
    

OTHER CHANGES

    o Set 'build.compile.source' and 'build.compile.target' to '1.4'
      in the default.properties; build.xml honors these settings.
    o Improved the style of the Java sources:
      + removed some tab characters,
      + ensured consistent modifier order,
      + fixed JavaDoc tags.
    
    
---------------------------------------------------------------------------

Find below the change history for older releases.



                    JGoodies Looks, Version 1.3.1 
                            Release Notes
                        

INTRODUCTION

    This update fixes bug #38; it's worth to ship a new version.
    All other known non-font related issues could be fixed too.


BUGS FIXED

    o #02: Plastic combo lacks 3D effect in 3D toolbar.
    o #36: Plastic l&fs lack auditory cues.
    o #37: Extra non-western themes don't work with Looks 1.3.
    o #38: Options#isTabIconsEnabled broken.
    o #39: Poor size for null values in combo box renderer.
    

OTHER CHANGES

    o Core:  Added two Plastic color themes intended for non-western fonts,
             see DesertBluerDefaultFont and ExperienceBlueDefaultFont.
             These themes ship in source form, are part of the binary jar,
             but are not installed as default themes. You can use these 
             themes via PlasticLookAndFeel#setMyCurrentTheme(PlasticTheme).
             Via PlasticLookAndFeel#installTheme(PlasticTheme) you can
             include them in the list of known Plastic themes.
    o Core:  PlasticXP spinner uses consistent button widths.
    o Dist:  Startet a JUnit test suite.
    o Docs:  Replaced older package names with the new names.
    o Build: ANT build file can perform JUnit tests.
    
    
---------------------------------------------------------------------------

Find below the change history for older releases.



                     JGoodies Looks, Version 1.3 
                            Release Notes
                        

INTRODUCTION

    This release fixes bugs and uses new package and class names.
    Java 1.5 is now supported, but some micro design improvements 
    made in the Looks are optimized for Java 1.4.2 and Java 1.4.1.


BUGS FIXED

    o Plastic internal frames use the outdated Java cup icon.  
    o Inactive drop shadows still try to snapshot via the Robot.
    o Broken position calculation in Windows password field.
    o Broken custom table header in Windows XP style.
    o #04: Broken Windows JTabbedPane HTML word wrap.
    o #05: Plastic Theme and Tab Layout Policy.
    o #17: WindowsToolBarSeparatorUI not same in 1.4.1 and 1.4.2.
    o #18: Height of menu items with a custom icon.
    o #20: Popup drop shadow may be corrupted.
    o #23: Menu items not anti-aliased [in 1.5 with aa enabled].
    o #24: Spinners drawn incorrectly.
    o #27: Plastic JTabbedPane scroll buttons unclear.
    o #28: Broken painting with custom combo renderer in 1.5.
    o #30: ShadowPopupBorder may throw a SecurityException.
    o #31: JToggleButton L&F not respecting icon text gap.
    

CHANGES THAT AFFECT THE BINARY COMPATIBILITY

    o Package names changed from com.jgoodies.plaf to com.jgoodies.looks
    o ExtWindowsLookAndFeel -> WindowsLookAndFeel
    o All ClearLook classes have been removed from the Looks.
      These will show up as a LintLookAndFeel later.
      
      
CHANGES THAT AFFECT THE VISUAL COMPATIBILITY

    o PlasticXP's password field paints a dot, not the star.


KNOWN ISSUES

    For all issues see http://looks.dev.java.net/servlets/ProjectIssues

    This release still lacks an improved font management
    for the Plastic l&f family on non-Windows platforms.
    For a workaround see issue #10.
      

OTHER CHANGES

    o Core:  Uses more shared UI instances.
    o Docs:  Added and fixed version tags.
    o Dist:  Fixed implementation title and vendor in the JAR manifest.
    o Dist:  Fixed broken package information in the JAR manifest.
    o Demo:  Added test case for all tab placements in both layouts.
    o Build: Added project name tag to the ANT build file.
    o Build: Added overview page.
    
